<launch>

  <arg name="hub_location"
       doc="Location(s) of USB PPPS hub (e.g., '3-5', '[3-5, 2-2]', , '[3-5, 3-5]')" />
  <arg name="hub_port"
       doc="Port(s) of USB PPPS hub you want to power on/off (e.g., '1', '[1, 1]', '[1, 2]'). Must be the same length as hub_location and each element corresponds to the element at the same position in hub_location" />

  <arg name="power_cycle_interval" default="1.0"
       doc="Interval [sec] in USB power cycle using USB PPPS hub" />
  <arg name="init_with_power_set" default="true"
       doc="Set power state of USB when driver of USB PPPS hub is initialized. Which state (ON or OFF) is set is defined by init_with_power_on" />
  <arg name="init_with_power_on" default="true"
       doc="Power on USB when driver of USB PPPS hub is initialized. This argument is valid only when init_with_power_set is true" />
  <arg name="power_service" default="~power"
       doc="Name of service for USB power switching" />
  <arg name="power_cycle_service" default="~power_cycle"
       doc="Name of service for USB power cycle" />
  <arg name="uhubctl_executable" default="uhubctl"
       doc="Command to control USB PPPS hub. You can add supplementary options to uhubctl command (e.g., 'uhubctl -r 100'). In addition, you can specify the path to uhubctl command you installed on your own (e.g., '~/uhubctl/uhubctl')" />

  <node name="usb_ppps_hub_driver"
        pkg="power_switching_tools_ros" type="usb_ppps_hub_driver.py"
        respawn="true"
        output="screen">
    <remap from="~power" to="$(arg power_service)" />
    <remap from="~power_cycle" to="$(arg power_cycle_service)" />
    <rosparam subst_value="true">
      hub_location: $(arg hub_location)
      hub_port: $(arg hub_port)
      power_cycle_interval: $(arg power_cycle_interval)
      init_with_power_set: $(arg init_with_power_set)
      init_with_power_on: $(arg init_with_power_on)
      uhubctl_executable: $(arg uhubctl_executable)
    </rosparam>
  </node>

</launch>
