Index: CMakeLists.txt
===================================================================
--- CMakeLists.txt	(revision 54)
+++ CMakeLists.txt	(working copy)
@@ -155,7 +155,7 @@
 if( NOT $ENV{BOOST_LIBRARYDIR} STREQUAL "" )
   set(Boost_LIBRARY_DIRS $ENV{BOOST_LIBRARYDIR})
 endif()
-find_package(Boost COMPONENTS python)
+find_package(Boost COMPONENTS system python)
 
 if( Boost_FOUND )
   message(STATUS "found boost version: ${Boost_VERSION}")
@@ -195,11 +195,11 @@
 #
 set(BUILD_SIFTFASTPY)
 if( Boost_PYTHON_FOUND )
-  find_package(PythonLibs)
+  find_package(PythonLibs 2)
 
   if( PYTHONLIBS_FOUND OR PYTHON_LIBRARIES )
 
-    find_package(PythonInterp)
+    find_package(PythonInterp 2)
     if( NOT PYTHON_EXECUTABLE )
       # look specifically for 2.6
       FIND_PROGRAM(PYTHON_EXECUTABLE
@@ -210,12 +210,11 @@
     if( PYTHON_EXECUTABLE )
       # get the site-packages directory
       execute_process(
-        COMMAND ${PYTHON_EXECUTABLE} -c "from distutils.sysconfig import get_python_lib; print get_python_lib()"
-        OUTPUT_VARIABLE _python_sitepackage
+        COMMAND ${PYTHON_EXECUTABLE} -c "import numpy; print numpy.get_include()"
+        OUTPUT_VARIABLE _python_numpy_include OUTPUT_STRIP_TRAILING_WHITESPACE
         RESULT_VARIABLE _python_failed)
       if( ${_python_failed} EQUAL 0 )
-        string(REGEX REPLACE "[\r\n]" "" _python_sitepackage "${_python_sitepackage}")
-        set(PYTHON_INCLUDE_PATH ${PYTHON_INCLUDE_PATH} ${_python_sitepackage}/numpy/core/include)
+        set(PYTHON_INCLUDE_PATH ${PYTHON_INCLUDE_PATH} ${__python_numpy_include})
       else()
         message(STATUS "failed to get python site-package directory")
       endif()
@@ -223,7 +222,7 @@
 
     add_definitions(${Boost_CFLAGS})
     set(CMAKE_REQUIRED_INCLUDES ${PYTHON_INCLUDE_PATH} ${Boost_INCLUDE_DIR} )
-    set(CMAKE_REQUIRED_LIBRARIES ${PYTHON_LIBRARIES} ${Boost_PYTHON_LIBRARY} ${Boost_THREAD_LIBRARY})
+    set(CMAKE_REQUIRED_LIBRARIES ${PYTHON_LIBRARIES} ${Boost_PYTHON_LIBRARY} ${Boost_SYSTEM_LIBRARY})
     set(CMAKE_REQUIRED_FLAGS ${Boost_CFLAGS})
 
     # check if all header files can be included
